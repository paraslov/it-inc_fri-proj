{"version":3,"sources":["n4-common/components/c4-SuperInputText/SuperInputText.module.css","n4-common/components/c2-SuperButton/SuperButton.module.css","n4-common/components/c3-SuperCheckbox/SuperCheckbox.module.css","n4-common/components/c1-Navbar/NavBar.module.css","reportWebVitals.ts","n5-features/f1-login/Login.tsx","n5-features/f2-registration/Registration.tsx","n5-features/f3-profile/Profile.tsx","n5-features/f4-password/restore_pw/RestorePassword.tsx","n5-features/f4-password/enter_new_pw/EnterNewPassword.tsx","n4-common/components/c4-SuperInputText/SuperInputText.tsx","n4-common/components/c2-SuperButton/SuperButton.tsx","n4-common/components/c3-SuperCheckbox/SuperCheckbox.tsx","n6-tests_and_trash/t1-tests/Tests.tsx","n1-app/a2-routes/Routes.tsx","n4-common/components/c1-Navbar/NavBar.tsx","n1-app/a1-app/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Login","Registration","Profile","RestorePassword","EnterNewPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","SuperButton","red","disabled","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Tests","useState","text","setText","setDisabled","style","margin","onClick","alert","PATH","Routes","exact","path","render","to","NavBar","navbarContainer","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3de5faa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2sfUC\",\"errorInput\":\"SuperInputText_errorInput__l4FEI\",\"error\":\"SuperInputText_error__1KF4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__21DAH\",\"red\":\"SuperButton_red__1XkeE\",\"disabled\":\"SuperButton_disabled__UOTTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3EdMs\",\"spanClassName\":\"SuperCheckbox_spanClassName__20bG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"NavBar_navbarContainer__2FqhM\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\n\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            Login page.\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>\r\n            Registration page.\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile page.\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const RestorePassword = () => {\r\n    return (\r\n        <div>\r\n            Restore password page.\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const EnterNewPassword = () => {\r\n    return (\r\n        <div>\r\n            Enter new password page.\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    /**\r\n     * class name to stylize error message\r\n     */\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error ? s.error: ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, disabled,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n    const finalClassName = disabled ? `${s.disabled}` : `${s.default} ${red ? s.red : ''} ${className}`\r\n\r\n    return (\r\n        <button disabled={disabled}\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {useState} from 'react'\r\nimport SuperInputText from '../../n4-common/components/c4-SuperInputText/SuperInputText'\r\nimport SuperButton from '../../n4-common/components/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from '../../n4-common/components/c3-SuperCheckbox/SuperCheckbox'\r\n\r\n\r\nexport const Tests = () => {\r\n    const [text, setText] = useState('')\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    const style = {margin: '10px'}\r\n\r\n    return (\r\n        <div style={style}>\r\n            <SuperInputText value={text} onChangeText={setText} style={style}/> <br/>\r\n            <SuperCheckbox checked={disabled} onChangeChecked={setDisabled} style={style}>\r\n                disable\r\n            </SuperCheckbox><br/>\r\n            <SuperButton onClick={() => alert(`You've printed: ${text}`)} disabled={disabled} style={style}>\r\n                Send\r\n            </SuperButton>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Login} from '../../n5-features/f1-login/Login'\r\nimport {Registration} from '../../n5-features/f2-registration/Registration'\r\nimport {Profile} from '../../n5-features/f3-profile/Profile'\r\nimport {RestorePassword} from '../../n5-features/f4-password/restore_pw/RestorePassword'\r\nimport {EnterNewPassword} from '../../n5-features/f4-password/enter_new_pw/EnterNewPassword'\r\nimport {Tests} from '../../n6-tests_and_trash/t1-tests/Tests'\r\n\r\n//* ========================================================= Constants for routes ================================>>\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RESTORE_PASSWORD: '/restore',\r\n    ENTER_NEW_PASSWORD: '/enter_new_password',\r\n    TESTS: '/tests',\r\n    NOT_FOUND: '/404'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RESTORE_PASSWORD} render={() => <RestorePassword/>}/>\r\n                <Route path={PATH.ENTER_NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n                <Route path={PATH.TESTS} render={() => <Tests/>}/>\r\n                <Route path={PATH.NOT_FOUND} render={() => <h1>PAGE NOT FOUND</h1>}/>\r\n                <Route path={'/*'} render={() => <Redirect to={PATH.NOT_FOUND}/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../../../n1-app/a2-routes/Routes'\r\nimport s from './NavBar.module.css'\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <div className={s.navbarContainer}>\r\n            <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n            <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTRATION}>Registration</NavLink>\r\n            <NavLink to={PATH.RESTORE_PASSWORD}>Restore password</NavLink>\r\n            <NavLink to={PATH.ENTER_NEW_PASSWORD}>New password</NavLink>\r\n            <NavLink to={PATH.TESTS}>Tests</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport {Routes} from '../a2-routes/Routes'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {NavBar} from '../../n4-common/components/c1-Navbar/NavBar'\r\n\r\nexport const App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                <h6>FP.v.1.04</h6>\r\n                <NavBar/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport {App} from './n1-app/a1-app/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}